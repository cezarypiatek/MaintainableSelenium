name: release
on:
  push:
    branches:
      - master
    paths:
      - 'Src/**'
jobs:
  build-extension:
    runs-on: windows-latest
    env: 
        DOTNET_NOLOGO: true
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        RepositoryUrl: 'https://github.com/${{ github.repository }}'
        RepositoryBranch: '${{ github.ref }}'
        SourceRevisionId: '${{ github.sha }}'
        Configuration: Release
        SolutionPath: Src\Tellurium.sln
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2   
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '2.0.x'
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Restore NuGet Packages
      run: nuget restore $env:SolutionPath
    - name: Calculate next version
      uses: cezarypiatek/NextVersionGeneratorAction@0.4
      with:
        minor-pattern: '\bAdd\b'
        patch-pattern: '.*'
        output-to-env-variable: 'Version'
    - name: Build solution
      run: msbuild $env:SolutionPath /t:Rebuild
    - name: Generate nuget packages
      run: |
        nuget pack Src\MvcPages\MvcPages.csproj.nuspec -NoPackageAnalysis -verbosity detailed -OutputDirectory ./dist -Version $env:Version -Properties Configuration=$env:Configuration
        nuget pack Src\VisualAssertions\VisualAssertions.csproj.nuspec -NoPackageAnalysis -verbosity detailed -OutputDirectory ./dist -Version $env:Version -Properties Configuration=$env:Configuration
    - name: Generate release note
      run: |
        git fetch --prune --unshallow
        $commitLog = git log "$(git describe --tags --abbrev=0)..HEAD" --pretty=format:"- %s"
        "What's new: `r`n`r`n$([string]::Join("`r`n",$commitLog))" | Out-File release_note.md -Encoding utf8
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.Version }}
        release_name:  ${{ env.Version }}
        body_path: release_note.md
        draft: false
        prerelease: false
    - name: Upload Release Asset - Tellurium.MvcPages Nuget
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/Tellurium.MvcPages.${{ env.Version }}.nupkg
        asset_name: Tellurium.MvcPages.${{ env.Version }}.nupkg
        asset_content_type: binary/octet-stream
    - name: Upload Release Asset - Tellurium.VisualAssertions Nuget
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/Tellurium.VisualAssertions.${{ env.Version }}.nupkg
        asset_name: Tellurium.VisualAssertions.${{ env.Version }}.nupkg
        asset_content_type: binary/octet-stream    
    - name: Publish extension to Nuget
      run: |
        dotnet nuget push ./dist/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json